@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
  font-family: 'PoppinsLight';
  src: url('./fonts/poppins-font/files/poppins-latin-200.woff');
}

@font-face {
  font-family: 'Poppins';
  src: url('./fonts/poppins-font/files/poppins-latin-300.woff');
}

@font-face {
  font-family: 'PoppinsSemiBold';
  src: url('./fonts/poppins-font/files/poppins-latin-500.woff');
}

@font-face {
  font-family: 'PoppinsBold';
  src: url('./fonts/poppins-font/files/poppins-latin-600.woff');
}

body {
  margin: 0;
  padding: 0;
}

/* Button hover - gradient effect */
.btn-hover-effect {
  background-image: linear-gradient(to right, #FFD303 0%, #db36a4  49%, #FFD303 100%);
    transition: 0.5s;
    background-size: 200% auto;
  }

.btn-hover-effect:hover {
  background-position: right center; /* change the direction of the change here */
}

/* SVG hover effect */
.svg {
  filter: brightness(1);
  transition: filter 200ms;
}

.svg:hover {
  filter: brightness(2) ;
}

/* Custom slider styling */
.shrink-slider .__rcs-handle-button {
  width: 42px !important;
  height: 42px !important;
  gap: 6px !important;
}

.shrink-slider .__rcs-handle-arrow {
  border-top: 6px solid transparent !important;
  border-right: 7.5px solid !important;
  border-bottom: 6px solid transparent !important;
}

/* Privacty policy caret */
.caret {
  display: inline-block;
  width: 0;
  height: 0;
  border-top: 6px solid transparent;
  border-bottom: 6px solid transparent;
  border-left: 9px solid;
  color: white;
}

/* Toggle privacy policy content*/
.hiddenContent {
  max-height: 0;
  opacity: 0;
  overflow: hidden;
  transition: max-height 0.5s ease-out, opacity 0.5s ease-out;
}

.visibleContent {
  max-height: screen;
  opacity: 1;
  transition: max-height 0.5s ease-in, opacity 0.5s ease-in;
}

/* Gradient underline decorator */
.decorator::after {
  content: "";
  display: block;
  height: 3px;
  width: 22px;
  background: linear-gradient(90deg, #FFCA0B 0%, #FE13A5 100%);
  margin-top: 6px;
}

/* Loader */
.loader {
  width: 48px;
  height: 48px;
  display: inline-block;
  position: relative;
  transform: rotate(45deg);
}
.loader::before {
  content: ''; 
  box-sizing: border-box;
  width: 24px;
  height: 24px;
  position: absolute;
  left: 0;
  top: -24px;
  animation: animloader 4s ease infinite;
}
.loader::after {
  content: '';
  box-sizing: border-box;
  position: absolute;
  left: 0;
  top: 0;
  width: 24px;
  height: 24px;
  background: rgba(255, 255, 255, 0.85);
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.15);
  animation: animloader2 2s ease infinite;
}

/* Loader animations */
@keyframes animloader {
  0% {
    box-shadow: 0 24px rgba(255, 255, 255, 0), 24px 24px rgba(255, 255, 255, 0), 24px 48px rgba(255, 255, 255, 0), 0px 48px rgba(255, 255, 255, 0);
  }
  12% {
    box-shadow: 0 24px white, 24px 24px rgba(255, 255, 255, 0), 24px 48px rgba(255, 255, 255, 0), 0px 48px rgba(255, 255, 255, 0);
  }
  25% {
    box-shadow: 0 24px white, 24px 24px white, 24px 48px rgba(255, 255, 255, 0), 0px 48px rgba(255, 255, 255, 0);
  }
  37% {
    box-shadow: 0 24px white, 24px 24px white, 24px 48px white, 0px 48px rgba(255, 255, 255, 0);
  }
  50% {
    box-shadow: 0 24px white, 24px 24px white, 24px 48px white, 0px 48px white;
  }
  62% {
    box-shadow: 0 24px rgba(255, 255, 255, 0), 24px 24px white, 24px 48px white, 0px 48px white;
  }
  75% {
    box-shadow: 0 24px rgba(255, 255, 255, 0), 24px 24px rgba(255, 255, 255, 0), 24px 48px white, 0px 48px white;
  }
  87% {
    box-shadow: 0 24px rgba(255, 255, 255, 0), 24px 24px rgba(255, 255, 255, 0), 24px 48px rgba(255, 255, 255, 0), 0px 48px white;
  }
  100% {
    box-shadow: 0 24px rgba(255, 255, 255, 0), 24px 24px rgba(255, 255, 255, 0), 24px 48px rgba(255, 255, 255, 0), 0px 48px rgba(255, 255, 255, 0);
  }
}

@keyframes animloader2 {
  0% {
    transform: translate(0, 0) rotateX(0) rotateY(0);
  }
  25% {
    transform: translate(100%, 0) rotateX(0) rotateY(180deg);
  }
  50% {
    transform: translate(100%, 100%) rotateX(-180deg) rotateY(180deg);
  }
  75% {
    transform: translate(0, 100%) rotateX(-180deg) rotateY(360deg);
  }
  100% {
    transform: translate(0, 0) rotateX(0) rotateY(360deg);
  }
}
